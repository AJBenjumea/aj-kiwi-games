openapi: "3.0.2"
info:
  title: GME Stonks
  description: Online Game Store
  contact:
    email: ajkiwi@gamestore.com
  version: "1.0"
servers:
  - url: https://api.server.test/v1
tags:
  - name: game
    description: game
  - name: genre
    description: genre
paths:
  /game:
    get:
      tags:
        - game
      summary: Get all games
      operationId: getGames
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        404:
          description: No games found
          content: { }
    post:
      tags:
        - game
      summary: Add a game
      operationId: addGame
      requestBody:
        description: Game object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        200:
          description: OK
        405:
          description: Invalid input
          content: { }
  /game/{gameId}:
    get:
      tags:
        - game
      summary: Get game with id
      operationId: getGameById
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Game'
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Game not found
          content: { }
        405:
          description: Validation exception
          content: { }
    put:
      tags:
        - game
      summary: Update by game id
      operationId: updateGameById
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Game object that needs to be updated in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        200:
          description: OK
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Game not found
          content: { }
        405:
          description: Validation exception
          content: { }
    delete:
      tags:
        - game
      summary: Delete an existing pet
      operationId: deleteGameById
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Game not found
          content: { }
components:
  schemas:
    Game:
      required:
        - name
        - genre
        - photoUrls
        - publisher
        - releaseDate
        - platform
        - rating
        - price
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Fifa
        genre:
          $ref: '#/components/schemas/Genre'
        photoUrls:
          type: array
          items:
            type: string
        publisher:
          type: string
          example: Ubisoft
        releaseDate:
          type: string
          example: March 1, 2020
        platform:
          type: array
          items:
            type: string
        rating:
          type: string
          enum:
            - E
            - T
            - M
        price:
          type: number
          format: currency
          example: 69.99
    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string